---
#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#

# Name of this project
name : Terraform module gke

# License of this project
license: "APACHE"

# Canonical GitHub repo
github_repo: clouddrove/terraform-gcp-gke

badges:
  - name: "Latest Release"
    image: "https://img.shields.io/github/release/clouddrove/terraform-gcp-gke.svg"
    url: "https://github.com/clouddrove/terraform-gcp-gke/releases/latest"
  - name: "tfsec"
    image: "https://github.com/clouddrove/terraform-gcp-gke/actions/workflows/tfsec.yml/badge.svg"
    url: "https://github.com/clouddrove/terraform-gcp-gke/actions/workflows/tfsec.yml"
  - name: "Licence"
    image: "https://img.shields.io/badge/License-APACHE-blue.svg"
    url: "LICENSE.md"
  - name: "Changelog"
    image: "https://img.shields.io/badge/Changelog-blue"
    url: "CHANGELOG.md"

prerequesties:
  - name: Terraform
    url: https://learn.hashicorp.com/terraform/getting-started/install.html
    version: ">= 1.7.0"
    
providers:
  - name: gcp
    url: https://cloud.google.com/
    version: ">= 5.22.0"

#  description of this project
description: |-
   Terraform module to create and manage GKE clusters on Google Cloud Platform.

# How to use this project
usage: |-
  Here are some examples of how you can use this module in your inventory structure:
  ### Default gke
  ```hcl
  module "gke" {
  source = "../../"

  name        = "gke"
  environment = var.environment
  label_order = var.label_order

  network    = module.vpc.vpc_id
  subnetwork = module.subnet.id
  project_id = var.gcp_project_id
  region     = var.gcp_region

  cluster_name               = "test-gke"
  location                   = "us-central1"
  gke_version                = "1.30.2-gke.1587003"
  remove_default_node_pool   = true
  service_account            = "example@example.gserviceaccount.com"
  deletion_protection        = false
  cluster_autoscaling        = false
  http_load_balancing        = false
  horizontal_pod_autoscaling = false
  network_policy             = false
  spot                       = false
  enable_preemptible         = true
  pod_security_policy        = true
  enable_private_endpoint    = false
  enable_private_nodes       = false
  master_ipv4_cidr_block     = "10.13.0.0/28"
  cluster_ipv4_cidr_block    = "/14"
  services_ipv4_cidr_block   = "/20"
  workload_metadata_mode     = "GKE_METADATA"
  cluster_network_policy = {
    policy1 = {
      enabled  = false
      provider = "CALICO"
    }
  }
  enable_master_authorized_networks = false
  master_authorized_networks = [
    {
      cidr_block   = "192.168.1.0/24"
      display_name = "Office Network"
    },
  ]
  managed_node_pool = [
    {
      name               = "critical"
      initial_node_count = 1
      machine_type       = "g1-small"
      image_type         = "COS_CONTAINERD"
      disk_size_gb       = "10"
      disk_type          = "pd-standard"
      preemptible        = true
    },
    {
      name               = "general"
      initial_node_count = 1
      image_type         = "COS_CONTAINERD"
      machine_type       = "g1-small"
      disk_size_gb       = "10"
      disk_type          = "pd-standard"
      preemptible        = true
    }
  ]

  enable_resource_labels = false

  resource_labels = {
    "env" = "production"
  }
  }
  ```